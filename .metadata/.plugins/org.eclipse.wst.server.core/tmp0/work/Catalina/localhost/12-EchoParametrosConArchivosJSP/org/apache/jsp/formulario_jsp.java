/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.4
 * Generated at: 2023-01-30 08:25:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import paqueteClases.Scriptlets;
import paqueteClases.Datos;

public final class formulario_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("paqueteClases.Datos");
    _jspx_imports_classes.add("paqueteClases.Scriptlets");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

// Variables recuperadas
String nombre = (String) request.getAttribute("nombre");
nombre = nombre != null ? nombre : "";

String clave = (String) request.getAttribute("clave");
clave = clave != null ? clave : "";

String genero = (String) request.getAttribute("genero");
String generoMasculino = genero != null && genero.equals("masculino") ? "checked" : "";
String generoFemenino = genero != null && genero.equals("femenino") ? "checked" : "";

String FechaNacimiento = (String) request.getAttribute("FechaNacimiento");
FechaNacimiento = FechaNacimiento != null ? FechaNacimiento : "";

String selectorSimple = (String) request.getAttribute("selectorSimple");
selectorSimple = selectorSimple != null ? selectorSimple : "";

String[] pais = (String[]) request.getAttribute("pais");
pais = pais != null ? pais : new String[0];


String acepto = (String) request.getAttribute("acepto");
acepto = acepto != null && acepto.equals("on") ? "checked" : "";

String comentario = (String) request.getAttribute("comentario");
comentario = comentario != null ? comentario : "";

String oculto = (String) request.getAttribute("oculto");
oculto = oculto != null ? oculto : "";

String[] colores = (String []) request.getAttribute("colores");
colores = colores != null ? colores : new String[0];

String nombreValidacion = (String) request.getAttribute("nombreValidacion");
String claveValidacion = (String) request.getAttribute("claveValidacion");
String generoValidacion = (String) request.getAttribute("generoValidacion");
String FechaNacimientoValidacion = (String) request.getAttribute("FechaNacimientoValidacion");
String selectorSimpleValidacion = (String) request.getAttribute("selectorSimpleValidacion");
String paisValidacion = (String) request.getAttribute("paisValidacion");
String aceptoValidacion = (String) request.getAttribute("aceptoValidacion");
String comentarioValidacion = (String) request.getAttribute("comentarioValidacion");
String ocultoValidacion = (String) request.getAttribute("ocultoValidacion");
String coloresValidacion= (String) request.getAttribute("coloresValidacion");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	width: 100vw;\r\n");
      out.write("	height: 100vh;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form {\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	box-shadow: 0 0 15px 5px rgba(0, 0, 0, 0.2);\r\n");
      out.write("	padding: 40px;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\",\r\n");
      out.write("		sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("form>* {\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<form action=\"FormularioServlet\" method=\"post\">\r\n");
      out.write("		<label>Nombre:</label>\r\n");
      out.write("		<input type=\"text\" name=\"nombre\" value=\"");
      out.print(nombre);
      out.write("\" /> <br />\r\n");
      out.write("		<label>Clave:</label>\r\n");
      out.write("		<input type=\"password\" name=\"clave\" value=\"");
      out.print(clave);
      out.write("\" /> <br />\r\n");
      out.write("		<label>Genero:</label>\r\n");
      out.write("		<label>Masculino:</label>\r\n");
      out.write("		<input type=\"radio\" name=\"genero\" value=\"masculino\" ");
      out.print(generoMasculino);
      out.write(" />\r\n");
      out.write("		<label>Femenino:</label>\r\n");
      out.write("		<input type=\"radio\" name=\"genero\" value=\"femenino\" ");
      out.print(generoFemenino);
      out.write(" /> <br />\r\n");
      out.write("		<label>Fecha de nacimiento (YYYY-MM-DD):</label>\r\n");
      out.write("		<input type=\"date\" name=\"FechaNacimiento\" value=\"");
      out.print(FechaNacimiento);
      out.write("\"> <br />\r\n");
      out.write("		<label>Selector simple:</label>\r\n");
      out.write("		<!-- <select name=\"selectorSimple\" >\r\n");
      out.write("			<option value=\"Espana\" >Espana</option>\r\n");
      out.write("			<option value=\"Francia\" >Francia</option>\r\n");
      out.write("			<option value=\"Italia\" >Italia</option>\r\n");
      out.write("		</select> -->\r\n");
      out.write("		");
      out.print(Scriptlets.generaSelectSimple("selectorSimple", Datos.arrayValoresYEtiquetasSimple, selectorSimple));
      out.write("\r\n");
      out.write("		<br />\r\n");
      out.write("		<label>Paises:</label>\r\n");
      out.write("		<br />\r\n");
      out.write("		<!--  <select name=\"pais\" id=\"pais\" multiple>\r\n");
      out.write("			<option value=\"Portugal\">Portugal</option>\r\n");
      out.write("			<option value=\"Espana\">Espa�a</option>\r\n");
      out.write("			<option value=\"Francia\">Francia</option>\r\n");
      out.write("			<option value=\"Italia\">Italia</option>\r\n");
      out.write("		</select> -->\r\n");
      out.write("		");
      out.print(Scriptlets.generaSelectMultiple("pais", Datos.arrayValoresYEtiquetasMultiple, pais, 3));
      out.write("\r\n");
      out.write("		<br />\r\n");
      out.write("		<label>Acepto:</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"acepto\" ");
      out.print(acepto);
      out.write(" /> <br />\r\n");
      out.write("		<label>Comentario:</label>\r\n");
      out.write("		<textarea name=\"comentario\" placeholder=\"texto de ejemplo\">");
      out.print(comentario);
      out.write("</textarea>\r\n");
      out.write("		<input type=\"hidden\" name=\"oculto\" value=\"aa\" /><br />\r\n");
      out.write("		<!-- <label class=\"margen\">colores:</label>\r\n");
      out.write("		<br />\r\n");
      out.write("		<label>amarillo:</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"colores\" value=\"amarillo\" />\r\n");
      out.write("		<label>rojo:</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"colores\" value=\"rojo\" />\r\n");
      out.write("		<label>verde:</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"colores\" value=\"verde\" />\r\n");
      out.write("		<label>azul:</label>\r\n");
      out.write("		<input type=\"checkbox\" name=\"colores\" value=\"azul\" /> -->\r\n");
      out.write("		");
      out.print(Scriptlets.generaArrayCajasChequeo("colores", Datos.arrayColores,colores));
      out.write("\r\n");
      out.write("		<br /> <input type=\"submit\" />\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
